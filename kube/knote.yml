---
# Pod Service
apiVersion: v1
kind: Service
metadata:
  name: ben-knote
spec:
  selector:
    # We are selecting the pods
    app: ben-knote
  ports:
    # Expose HTTP (port 80) requests and forwards it to the container
    # port, 3000
    - port: 80
      targetPort: 3000
  # Default is ClusterIP (Only accepts local)
  # LoadBalancer accepts and distrbutes traffic from the open.
  type: ClusterIP
---
# Pod deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ben-knote
spec:
  replicas: 1
  # Select the ben-knote containers
  selector:
    matchLabels:
      app: ben-knote
  template:
    metadata:
      labels:
        app: ben-knote
    spec:
      containers:
        - name: ben-knote
          image: acrylic125/ben-knote:1.5
          ports:
            # Since the application runs on port 3000.
            - containerPort: 3000
          resources:
            requests:
              memory: "128Mi"
              cpu: "0.1"
            limits:
              memory: "256Mi"
              cpu: "0.2"
          env:
            - name: MONGO_URL
              value: mongodb://ben-mongo:27017/dev
            - name: MINIO_ACCESS_KEY
              value: mykey
            - name: MINIO_SECRET_KEY
              value: mysecret
            - name: MINIO_HOST
              value: ben-minio
          imagePullPolicy: Always
--- 
# Define ingress for the application
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ben-knote-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
spec:
  rules:
    - host: localhost
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: ben-knote
                port:
                  number: 80
